@startuml

actor User
participant View
participant Controller
participant Model

== Inicialização do Programa ==
/'O passo abaixo existe apenas para que os pipes fiquem correctos'/
User-[hidden]->User 
activate User
User -> Controller : Iniciar Programa()

activate Controller

Controller -> Controller : try Ativar Interface()
alt Falha ao ativar interface
    Controller -> Controller : catch Exception
    Controller -> User : Mostrar erro "Falha ao iniciar a interface"
    deactivate User
    Controller -> Controller : Terminar programa
else Interface iniciada com sucesso
    Controller -> View : Ativar Interface()
    deactivate Controller
    activate View
    View -> View : Disponibilizar UI (Janelas e Opções)
    /'O passo abaixo existe apenas para que os pipes fiquem correctos'/
        View-[hidden]->View 
    deactivate View
end

== Importação de Dados ==
User -> View : Seleciona “Importar Ficheiro"
activate User
activate View
View -> Controller : Notifica que utilizador selecionou importar ficheiro
activate Controller
Controller -> View : Mostra Carregar Ficheiro()
View --> User: Interface de seleção de ficheiro
User -> View: Seleciona ficheiro
deactivate User
View -> Controller : Notifica ficheiro selecionado
deactivate View
Controller -> Model : Importar ficheiro()
deactivate Controller 
activate Model
Model -> Model: try Validar ficheiro() 

alt Processamento falhou
    group Extensão do ficheiro diferente de .csv
        Model -> Model : throw new EventoFicheiroInvalido("Ficheiro não é .csv")
        Model --> View: Notifica ficheiro inválido 
        activate View
        View --> User: Mensagem de falha de importação
        activate User
        deactivate User
        deactivate View
    end

    group Ficheiro está vazio 
        Model -> Model : throw new EventoFalhaImportacao("CSV vazio")
        Model --> View: Notifica falha de importação
        activate View
        View --> User: Mensagem de falha de importação
        activate User
        deactivate User
        deactivate View
    end

    group Ficheiro está mal formatado
        Model -> Model : throw new EventoFalhaImportacao("CSV mal formatado")
        Model --> View: Notifica falha de importação
        activate View
        View --> User: Mensagem de falha de importação
        activate User
        deactivate User
        deactivate View
    end

    group Exceção inesperada ao importar
        Model -> Model : throw new EventoFalhaImportacao("Erro genérico")
        Model --> View: Notifica falha de importação 
        activate View
        View --> User: Mensagem de falha inesperada na importação
        activate User
        deactivate User
        deactivate View
    end
else Processamento foi bem sucedido
    Model -> Model : Importar dados ()
    Model -> View : Notifica estado do processamento
    deactivate Model   
    activate View
    View -> Model : Solicita lista de gráficos disponíveis
    activate Model
    Model --> View: Lista de gráficos 
    deactivate Model
    deactivate View
    View --> User: Mostra importação bem sucedida e opções de gráficos disponíveis
    activate User
    /'O passo abaixo existe apenas para que os pipes fiquem correctos'/
        User-[hidden]->User
end


== Criação e customização do gráfico ==
User -> View : Escolhe tipo de gráfico
activate View
View -> Controller : Gráfico selecionado
activate Controller
Controller --> View: Mostra formulário de campos
deactivate Controller
View --> User: Mostra formulário
User -> View: Preenche dados e submete
deactivate User
View -> Controller : Notifica novos parâmetros
deactivate View
activate Controller
Controller -> Model : Gerar dados ()
deactivate Controller
activate Model

Model -> Model: try Processar dados e gerar lista()

alt Geração do gráfico falhou

    group Não há dados disponíveis
        Model -> Model : throw new EventoFalhaGeracao("Não há dados para gerar gráfico")
        Model --> View : Notifica falha de geração de gráfico
        activate View
        View --> User : Mensagem de erro – sem dados
        activate User
        deactivate User
        deactivate View
    end

    group Tipo de gráfico não suportado
        Model -> Model : throw new EventoFalhaGeracao("Tipo de gráfico não suportado")
        Model --> View : Notifica falha de geração de gráfico
        activate View
        View --> User : Mensagem de erro – tipo não suportado
        activate User
        deactivate User
        deactivate View
    end

    group Exceção inesperada ao gerar gráfico
        Model -> Model : throw new EventoFalhaGeracao("Erro genérico")
        Model --> View : Notifica falha de geração de gráfico
        activate View
        View --> User : Mensagem de erro inesperado
        activate User
        deactivate User
        deactivate View

        group Limpa figura temporária
            Model -> Model : finally { plt.close(figura) }
        end
    end

else Geração do gráfico bem sucedida
    Model -> Model : Gerar gráfico ()
    Model -> View : Notifica gráfico disponível
    deactivate Model
    activate View
    View -> User : Mostra gráfico
    deactivate View
    activate User
    /'O passo abaixo existe apenas para que os pipes fiquem correctos'/
        User-[hidden]->User 
    deactivate User
end

== Gravação de Gráfico ==
User -> View : Seleciona opção de gravar "Guardar Gráfico" 
activate User
View -> Controller : Notifica solicitação de gravação
activate View
activate Controller
Controller --> View : Mostra formulário de gravação
View --> User : Mostra formulário de gravação
deactivate Controller
User -> View : Preenche e submete 
deactivate User
View -> Controller : Notifica solicitação de gravação
deactivate View
activate Controller
Controller -> Model : Gravar gráfico ()
deactivate Controller
activate Model

Model -> Model : try Gravar gráfico ()

alt Gravação falhou

    group Não existe gráfico para gravar
        Model -> Model : throw new FalhaGravacaoEvt("Nenhum gráfico disponível")
        Model --> View : Notifica falha de gravação
        activate View
        View --> User : Mensagem de erro – nenhum gráfico disponível
        activate User
        deactivate User
        deactivate View
    end

    group Exceção ao gravar gráfico
        Model -> Model : throw new FalhaGravacaoEvt("Erro genérico")
        Model --> View : Notifica falha de gravação
        activate View
        View --> User : Mensagem de erro inesperado ao gravar
        activate User
        deactivate User
        deactivate View

        group Limpa figura temporária
            Model -> Model : finally { plt.close(figura) }
        end
    end

else Gravação bem sucedida
    Model -> Model : Salvar figura no directório escolhido
    Model -> View : Notifica gráfico gravado
    deactivate Model
    activate View
    View --> User : Mensagem de resultado 
    deactivate View
    activate User
    /'O passo abaixo existe apenas para que os pipes fiquem correctos'/
        User-[hidden]->User 
    deactivate User
end

@enduml